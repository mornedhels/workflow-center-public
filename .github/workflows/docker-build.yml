name: docker build

on:
  workflow_call:
    inputs:
      image-name:
        description: "the name of the image"
        type: string
        required: true
      image-tag:
        description: "the version of the image to deploy, list of tags e.g. `dev,1.0.0`"
        required: true
        type: string
      dockerfile:
        description: "the name of the dockerfile"
        default: "Dockerfile"
        type: string
        required: false
      platform:
        description: "the platform to build for, default is `linux/amd64`"
        default: "linux/amd64"
        type: string
        required: false
      build-args:
        description: "the build args to use"
        type: string
        required: false
      buildx-version:
        description: "the version of buildx to use"
        type: string
        required: false
      container-registry:
        description: "the container registry to use"
        default: "registry.hub.docker.com"
        type: string
        required: false
      container-registry-user:
        description: "the container registry user to use"
        default: "mornedhels"
        type: string
        required: false
      dockerhub-username:
        description: "the dockerhub username to use"
        default: "mornedhels"
        type: string
        required: false
      docker-scan:
        description: "indicates whether to perform docker scout scan, default is `true`"
        default: true
        type: boolean
        required: false
      scan-category:
        description: "the category for the gh sarif upload"
        type: string
        required: false
      project-root:
        description: "the root of the project, default is '.'"
        default: "."
        type: string
        required: false
      runner:
        description: "the runner to use"
        default: "ubuntu-latest"
        type: string
        required: false
      debug:
        description: "enable debug mode"
        default: false
        type: boolean
    secrets:
      CONTAINER_REGISTRY_USER:
        required: false
      CONTAINER_REGISTRY_PASSWORD:
        required: true
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false

jobs:
  docker:
    name: Docker Build & Push
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        if: ${{ inputs.platform != 'linux/amd64' }}
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: ${{ inputs.buildx-version }}
      - name: Docker Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.container-registry }}
          username: ${{ secrets.CONTAINER_REGISTRY_USER || inputs.container-registry-user }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Login to Docker Hub
        if: inputs.docker-scan == true
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME  || inputs.dockerhub-username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.container-registry }}/${{ inputs.container-registry-user }}/${{ inputs.image-name }}
          tags: ${{ inputs.image-tag }}
          flavor: |
            latest=false
      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.project-root }}
          file: ${{ inputs.dockerfile }}
          provenance: false
          platforms: ${{ inputs.platform }}
          build-args: ${{ inputs.build-args }}
          tags: ${{ steps.meta.outputs.tags }}
      - name: Load Docker image (prepare docker scout)
        if: inputs.docker-scan == true
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.project-root }}
          file: ${{ inputs.dockerfile }}
          load: true
          provenance: false
          build-args: ${{ inputs.build-args }}
          tags: ${{ steps.meta.outputs.tags }}
      - name: Docker Scout
        if: inputs.docker-scan == true
        uses: docker/scout-action@v1
        with:
          command: cves,compare
          image: local://${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          to: registry://${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          ignore-unchanged: true
          write-comment: false
      - name: Docker Scout sarif
        if: inputs.docker-scan == true
        uses: docker/scout-action@v1
        with:
          command: cves
          image: local://${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          sarif-file: sarif.output.json
          write-comment: false
          summary: false
          only-severities: "critical,high,medium"
      - name: Upload Docker Scout scan results to GitHub Security tab
        if: always() && inputs.docker-scan == true && hashFiles('sarif.output.json') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.output.json
          category: ${{ inputs.scan-category }}
      - name: Docker push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.project-root }}
          file: ${{ inputs.dockerfile }}
          push: true
          provenance: false
          platforms: ${{ inputs.platform }}
          tags: ${{ steps.meta.outputs.tags }}
      - name: Debug
        if: always() && inputs.debug == true
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
